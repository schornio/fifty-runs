datasource db {
    provider          = "postgresql"
    url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
    shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id        String            @id @default(uuid())
    name      String            @unique
    email     String            @unique
    password  String
    image     String?
    exercises RunningExercise[]
    sessions  Session[]
    reactions Reaction[]

    @@unique([name, email])
}

model Session {
    id        String   @id @default(uuid())
    token     String   @unique
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    createdAt DateTime @default(now())
    expiresAt DateTime
}

model RunningExercise {
    id                String     @id @default(uuid())
    distanceInMeters  Int
    durationInSeconds Int
    date              DateTime
    notes             String?
    image             String?
    user              User       @relation(fields: [userId], references: [id])
    userId            String
    visibility        String     @default("protected") // public, protected, private
    reactions         Reaction[]
}

model Reaction {
    id         String          @id @default(uuid())
    type       String // fifty, like, love, haha, wow, sad
    date       DateTime        @default(now())
    user       User            @relation(fields: [userId], references: [id])
    userId     String
    exercise   RunningExercise @relation(fields: [exerciseId], references: [id])
    exerciseId String

    @@unique([userId, exerciseId])
}
